#=================================================
#   Description: Newifi 3 FROM LEAN'S LEDE
#   Author: JK
#=================================================

name: Build Newifi 3

on: 
  release:
    types: [published]
  push:
    branches: 
      - master
  schedule:
    - cron: 0 20 * * *
jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler u-boot-tools gcc-multilib g++-multilib
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code
      run: |
        git clone https://github.com/coolsnowwolf/lede lede
        echo '开启魔法上网'
        cd lede
        echo 'src-git helloworld https://github.com/fw876/helloworld'>>./feeds.conf.default

    - name: Update feeds
      run: cd lede && ./scripts/feeds update -a

    - name: Install feeds
      run: cd lede && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        cp -f newifi3.config ./lede/.config
        chmod +x diy.sh
        cd lede
        ../diy.sh
        make defconfig

    - name: Download package
      run: |
        echo -e "$(nproc) thread build."
        cd lede && make download -j16

    - name: Build
      run: |
        cd lede
        make -j$(nproc) || make -j1 V=s
        echo "======================="
        echo "Space usage:"
        echo "======================="
        df -h
        echo "======================="
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin
        rm -rf ./bin/targets/ipq40xx/generic/packages

    - name: Prepare artifact
      run: |
        cd lede
        mkdir -p ./artifact/package
        mkdir -p ./artifact/buildinfo
        rm -rf $(find ./bin/targets/ -type d -name "packages")
        cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
        cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
        
    - name: Upload buildinfo
      uses: actions/upload-artifact@v3
      with:
        name: newifi3_buildinfo
        path: ./lede/artifact/buildinfo/

    - name: Upload package
      uses: actions/upload-artifact@v3
      with:
        name: newifi3_package
        path: ./lede/artifact/package/

    - name: Upload firmware
      uses: actions/upload-artifact@v3
      with:
        name: newifi3_firmware
        path: ./lede/bin/targets/
